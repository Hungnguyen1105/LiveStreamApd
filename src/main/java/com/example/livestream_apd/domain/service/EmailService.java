package com.example.livestream_apd.domain.service;

import com.example.livestream_apd.utils.TimeUtil;
import jakarta.mail.MessagingException;
import jakarta.mail.internet.MimeMessage;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Service;

import java.io.UnsupportedEncodingException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.concurrent.CompletableFuture;

@RequiredArgsConstructor
@Slf4j
@Service

public class EmailService {
    private final JavaMailSender mailSender;

    @Value("${app.email.from}")
    private String fromEmail;

    @Value("${app.email.from-name}")
    private String fromName;

    @Value("${app.email.verification-url}")
    private String verificationUrl;

    @Value("${app.email.reset-password-url}")
    private String resetPasswordUrl;

    public CompletableFuture<Boolean> sendEmailVerificationOtp(String toEmail, String fullName,
                                                        String otpCode, String token) {
        return CompletableFuture.supplyAsync(() -> {
            try {
                MimeMessage message = mailSender.createMimeMessage();
                MimeMessageHelper messageHelper = new MimeMessageHelper(message, true, "UTF-8");
                messageHelper.setFrom(fromEmail, fromName);
                messageHelper.setTo(toEmail);
                messageHelper.setSubject("Email OTP");
                String htmlContent = createEmailVerificationTemplate(fullName, otpCode, token);
                messageHelper.setText(htmlContent, true);
                mailSender.send(message);
                log.info("G·ª≠i th√†nh c√¥ng ƒë·∫øn {}", toEmail);
                return true;
            } catch (Exception e) {
                log.error("L·ªói g·ª≠i email {}", toEmail, e);
                return false;
            }
        });
    }

    public CompletableFuture<Boolean> sendWelcomeEmail(String toEmail, String fullName){
        return CompletableFuture.supplyAsync(() -> {
            try {
                MimeMessage message = mailSender.createMimeMessage();
                MimeMessageHelper messageHelper = new MimeMessageHelper(message, true, "UTF-8");
                messageHelper.setFrom(fromEmail, fromName);
                messageHelper.setTo(toEmail);
                messageHelper.setSubject("Ch√†o m·ª´ng ƒë·∫øn v·ªõi Livestream");
                String htmlContent = createWelcomeTemplate(fullName);
                messageHelper.setText(htmlContent, true);
                mailSender.send(message);
                log.info("G·ª≠i th√†nh c√¥ng ƒë·∫øn {}", toEmail);
                return true;
            } catch (Exception e) {
                log.error("L·ªói g·ª≠i email {}", toEmail, e);
                return false;
            }
        });
    }

    public CompletableFuture<Boolean> sendResetPasswordEmail(String toEmail, String fullName, String otpCode, String token) {
        return CompletableFuture.supplyAsync(() -> {
            try {
                MimeMessage message = mailSender.createMimeMessage();
                MimeMessageHelper messageHelper = new MimeMessageHelper(message, true, "UTF-8");
                messageHelper.setFrom(fromEmail, fromName);
                messageHelper.setTo(toEmail);
                messageHelper.setSubject("Reset Password");
                String htmlContent = createPasswordResetTemplate(fullName, otpCode, token);
                messageHelper.setText(htmlContent, true);
                mailSender.send(message);
                log.info("G·ª≠i th√†nh c√¥ng ƒë·∫øn {}", toEmail);
                return true;
            } catch (Exception e){
                log.error("L·ªói g·ª≠i email {}", toEmail, e);
                return false;
            }
        });
    }

    public CompletableFuture<Boolean> sendPasswordChangeConfirmation(String toEmail, String fullName) {
        return CompletableFuture.supplyAsync(() -> {
            try {
                MimeMessage message = mailSender.createMimeMessage();
                MimeMessageHelper messageHelper = new MimeMessageHelper(message, true, "UTF-8");
                messageHelper.setFrom(fromEmail, fromName);
                messageHelper.setTo(toEmail);
                messageHelper.setSubject("M·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c thay ƒë·ªïi");
                String htmlContent = createWelcomeTemplate(fullName);
                messageHelper.setText(htmlContent, true);
                mailSender.send(message);
                log.info("G·ª≠i th√†nh c√¥ng ƒë·∫øn {}", toEmail);
                return true;
            } catch (Exception e) {
                log.error("L·ªói g·ª≠i email {}", toEmail, e);
                return false;
            }
        });
    }

    private String createEmailVerificationTemplate(String fullName, String otpCode, String token) {
        return String.format("""
            <!DOCTYPE html>
            <html>
            <head>
                <meta charset="UTF-8">
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <title>X√°c th·ª±c Email</title>
                <style>
                    body { font-family: 'Segoe UI', Arial, sans-serif; line-height: 1.6; margin: 0; padding: 0; background-color: #f4f4f4; }
                    .container { max-width: 600px; margin: 0 auto; background: white; border-radius: 10px; overflow: hidden; box-shadow: 0 5px 15px rgba(0,0,0,0.1); }
                    .header { background: linear-gradient(135deg, #667eea 0%%, #764ba2 100%%); color: white; padding: 30px; text-align: center; }
                    .content { padding: 40px 30px; }
                    .otp-code { background: #f8f9fa; border: 2px dashed #667eea; border-radius: 8px; padding: 20px; text-align: center; margin: 20px 0; }
                    .otp-number { font-size: 32px; font-weight: bold; color: #667eea; letter-spacing: 5px; }
                    .button { display: inline-block; background: #667eea; color: white; padding: 12px 30px; text-decoration: none; border-radius: 6px; margin: 20px 0; }
                    .footer { background: #f8f9fa; padding: 20px; text-align: center; color: #666; font-size: 14px; }
                </style>
            </head>
            <body>
                <div class="container">
                    <div class="header">
                        <h1>üîê X√°c th·ª±c Email</h1>
                        <p>Live Hungbao - N·ªÅn t·∫£ng livestream h√†ng ƒë·∫ßu</p>
                    </div>
                    <div class="content">
                        <h2>Ch√†o %s!</h2>
                        <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n Live Hungbao. ƒê·ªÉ ho√†n t·∫•t qu√° tr√¨nh ƒëƒÉng k√Ω, vui l√≤ng x√°c th·ª±c email c·ªßa b·∫°n.</p>
                        
                        <div class="otp-code">
                            <p>M√£ x√°c th·ª±c c·ªßa b·∫°n l√†:</p>
                            <div class="otp-number">%s</div>
                            <p><small>M√£ n√†y c√≥ hi·ªáu l·ª±c trong 5 ph√∫t</small></p>
                        </div>
                        
                        <p>Ho·∫∑c b·∫°n c√≥ th·ªÉ click v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ x√°c th·ª±c:</p>
                        <div style="text-align: center;">
                            <a href="%s?token=%s&otp=%s" class="button">X√°c th·ª±c Email</a>
                        </div>
                        
                        <p><strong>L∆∞u √Ω:</strong></p>
                        <ul>
                            <li>M√£ OTP n√†y ch·ªâ c√≥ hi·ªáu l·ª±c trong 5 ph√∫t</li>
                            <li>Kh√¥ng chia s·∫ª m√£ n√†y v·ªõi b·∫•t k·ª≥ ai</li>
                            <li>N·∫øu b·∫°n kh√¥ng th·ª±c hi·ªán h√†nh ƒë·ªông n√†y, vui l√≤ng b·ªè qua email</li>
                        </ul>
                    </div>
                    <div class="footer">
                        <p>¬© 2024 Live Hungbao. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
                        <p>Email ƒë∆∞·ª£c g·ª≠i l√∫c: %s</p>
                    </div>
                </div>
            </body>
            </html>
            """,
                fullName, otpCode, verificationUrl, token, otpCode,
                TimeUtil.nowVietNam().format(DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss"))
        );
    }

    private String createPasswordResetTemplate(String fullName, String otpCode, String token) {
        return String.format("""
            <!DOCTYPE html>
            <html>
            <head>
                <meta charset="UTF-8">
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <title>ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</title>
                <style>
                    body { font-family: 'Segoe UI', Arial, sans-serif; line-height: 1.6; margin: 0; padding: 0; background-color: #f4f4f4; }
                    .container { max-width: 600px; margin: 0 auto; background: white; border-radius: 10px; overflow: hidden; box-shadow: 0 5px 15px rgba(0,0,0,0.1); }
                    .header { background: linear-gradient(135deg, #ff6b6b 0%%, #ffa500 100%%); color: white; padding: 30px; text-align: center; }
                    .content { padding: 40px 30px; }
                    .otp-code { background: #fff5f5; border: 2px dashed #ff6b6b; border-radius: 8px; padding: 20px; text-align: center; margin: 20px 0; }
                    .otp-number { font-size: 32px; font-weight: bold; color: #ff6b6b; letter-spacing: 5px; }
                    .button { display: inline-block; background: #ff6b6b; color: white; padding: 12px 30px; text-decoration: none; border-radius: 6px; margin: 20px 0; }
                    .footer { background: #f8f9fa; padding: 20px; text-align: center; color: #666; font-size: 14px; }
                    .warning { background: #fff3cd; border: 1px solid #ffeaa7; border-radius: 6px; padding: 15px; margin: 20px 0; }
                </style>
            </head>
            <body>
                <div class="container">
                    <div class="header">
                        <h1>üîÑ ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</h1>
                        <p>Live Hungbao - Kh√¥i ph·ª•c t√†i kho·∫£n</p>
                    </div>
                    <div class="content">
                        <h2>Ch√†o %s!</h2>
                        <p>Ch√∫ng t√¥i nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n c·ªßa b·∫°n.</p>
                        
                        <div class="otp-code">
                            <p>M√£ x√°c th·ª±c ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u:</p>
                            <div class="otp-number">%s</div>
                            <p><small>M√£ n√†y c√≥ hi·ªáu l·ª±c trong 5 ph√∫t</small></p>
                        </div>
                        
                        <p>Ho·∫∑c b·∫°n c√≥ th·ªÉ click v√†o n√∫t b√™n d∆∞·ªõi:</p>
                        <div style="text-align: center;">
                            <a href="%s?token=%s&otp=%s" class="button">ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</a>
                        </div>
                        
                        <div class="warning">
                            <p><strong>‚ö†Ô∏è L∆∞u √Ω b·∫£o m·∫≠t:</strong></p>
                            <ul>
                                <li>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y</li>
                                <li>Kh√¥ng chia s·∫ª m√£ OTP v·ªõi b·∫•t k·ª≥ ai</li>
                                <li>M√£ n√†y s·∫Ω h·∫øt h·∫°n sau 5 ph√∫t</li>
                                <li>Li√™n h·ªá h·ªó tr·ª£ n·∫øu c√≥ v·∫•n ƒë·ªÅ b·∫•t th∆∞·ªùng</li>
                            </ul>
                        </div>
                    </div>
                    <div class="footer">
                        <p>¬© 2024 Live Hungbao. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
                        <p>Email ƒë∆∞·ª£c g·ª≠i l√∫c: %s</p>
                    </div>
                </div>
            </body>
            </html>
            """,
                fullName, otpCode, resetPasswordUrl, token, otpCode,
                TimeUtil.nowVietNam().format(DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss"))
        );
    }

    private String createWelcomeTemplate(String fullName) {
        return String.format("""
            <!DOCTYPE html>
            <html>
            <head>
                <meta charset="UTF-8">
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <title>Ch√†o m·ª´ng ƒë·∫øn v·ªõi Live Hungbao</title>
                <style>
                    body { font-family: 'Segoe UI', Arial, sans-serif; line-height: 1.6; margin: 0; padding: 0; background-color: #f4f4f4; }
                    .container { max-width: 600px; margin: 0 auto; background: white; border-radius: 10px; overflow: hidden; box-shadow: 0 5px 15px rgba(0,0,0,0.1); }
                    .header { background: linear-gradient(135deg, #00c851 0%%, #007e33 100%%); color: white; padding: 30px; text-align: center; }
                    .content { padding: 40px 30px; }
                    .footer { background: #f8f9fa; padding: 20px; text-align: center; color: #666; font-size: 14px; }
                    .feature { background: #f8f9fa; border-radius: 8px; padding: 20px; margin: 15px 0; }
                </style>
            </head>
            <body>
                <div class="container">
                    <div class="header">
                        <h1>üéâ Ch√†o m·ª´ng ƒë·∫øn v·ªõi Live Hungbao!</h1>
                        <p>N·ªÅn t·∫£ng livestream t∆∞∆°ng t√°c s·ªë 1 Vi·ªát Nam</p>
                    </div>
                    <div class="content">
                        <h2>Ch√†o %s!</h2>
                        <p>C·∫£m ∆°n b·∫°n ƒë√£ tham gia c·ªông ƒë·ªìng Live Hungbao! T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c k√≠ch ho·∫°t th√†nh c√¥ng.</p>
                        
                        <div class="feature">
                            <h3>üé• B·∫Øt ƒë·∫ßu livestream ngay</h3>
                            <p>Chia s·∫ª nh·ªØng kho·∫£nh kh·∫Øc tuy·ªát v·ªùi v·ªõi h√†ng tri·ªáu ng∆∞·ªùi xem</p>
                        </div>
                        
                        <div class="feature">
                            <h3>üéÅ Nh·∫≠n v√† t·∫∑ng qu√† ·∫£o</h3>
                            <p>T∆∞∆°ng t√°c v·ªõi streamer y√™u th√≠ch th√¥ng qua h·ªá th·ªëng qu√† t·∫∑ng ƒëa d·∫°ng</p>
                        </div>
                        
                        <div class="feature">
                            <h3>üí¨ Tr√≤ chuy·ªán realtime</h3>
                            <p>K·∫øt n·ªëi v·ªõi c·ªông ƒë·ªìng th√¥ng qua chat tr·ª±c ti·∫øp</p>
                        </div>
                        
                        <p>H√£y kh√°m ph√° v√† tr·∫£i nghi·ªám nh·ªØng t√≠nh nƒÉng tuy·ªát v·ªùi c·ªßa Live Hungbao!</p>
                    </div>
                    <div class="footer">
                        <p>¬© 2024 Live Hungbao. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
                        <p>C·∫ßn h·ªó tr·ª£? Li√™n h·ªá: support@livehungbao.com</p>
                    </div>
                </div>
            </body>
            </html>            """, fullName);
    }

    private String createPasswordChangeConfirmationTemplate(String fullName) {
        return String.format(
                "<!DOCTYPE html>" +
                        "<html>" +
                        "<head>" +
                        "<meta charset=\"UTF-8\">" +
                        "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">" +
                        "<title>M·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c thay ƒë·ªïi</title>" +
                        "<style>" +
                        "body { font-family: 'Segoe UI', Arial, sans-serif; line-height: 1.6; margin: 0; padding: 0; background-color: #f4f4f4; }" +
                        ".container { max-width: 600px; margin: 0 auto; background: white; border-radius: 10px; overflow: hidden; box-shadow: 0 5px 15px rgba(0,0,0,0.1); }" +
                        ".header { background: linear-gradient(135deg, #28a745 0%%, #20c997 100%%); color: white; padding: 30px; text-align: center; }" +
                        ".content { padding: 40px 30px; }" +
                        ".security-notice { background: #fff3cd; border: 1px solid #ffeaa7; border-radius: 6px; padding: 15px; margin: 20px 0; }" +
                        ".footer { background: #f8f9fa; padding: 20px; text-align: center; color: #666; font-size: 14px; }" +
                        "</style>" +
                        "</head>" +
                        "<body>" +
                        "<div class=\"container\">" +
                        "<div class=\"header\">" +
                        "<h1>üîê M·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c thay ƒë·ªïi</h1>" +
                        "<p>Live Hungbao - B·∫£o m·∫≠t t√†i kho·∫£n</p>" +
                        "</div>" +
                        "<div class=\"content\">" +
                        "<h2>Ch√†o %s!</h2>" +
                        "<p>M·∫≠t kh·∫©u t√†i kho·∫£n Live Hungbao c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c thay ƒë·ªïi th√†nh c√¥ng.</p>" +

                        "<div class=\"security-notice\">" +
                        "<h3>‚ö†Ô∏è Th√¥ng b√°o b·∫£o m·∫≠t</h3>" +
                        "<p>N·∫øu b·∫°n kh√¥ng th·ª±c hi·ªán thay ƒë·ªïi n√†y, vui l√≤ng li√™n h·ªá ngay v·ªõi ƒë·ªôi h·ªó tr·ª£ c·ªßa ch√∫ng t√¥i.</p>" +
                        "</div>" +

                        "<p><strong>Th√¥ng tin thay ƒë·ªïi:</strong></p>" +
                        "<ul>" +
                        "<li>Th·ªùi gian: %s</li>" +
                        "<li>T·∫•t c·∫£ phi√™n ƒëƒÉng nh·∫≠p kh√°c ƒë√£ b·ªã ƒëƒÉng xu·∫•t t·ª± ƒë·ªông</li>" +
                        "<li>B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p l·∫°i ƒë·ªÉ ti·∫øp t·ª•c s·ª≠ d·ª•ng</li>" +
                        "</ul>" +

                        "<p><strong>ƒê·ªÉ b·∫£o v·ªá t√†i kho·∫£n:</strong></p>" +
                        "<ul>" +
                        "<li>Kh√¥ng chia s·∫ª m·∫≠t kh·∫©u v·ªõi b·∫•t k·ª≥ ai</li>" +
                        "<li>S·ª≠ d·ª•ng m·∫≠t kh·∫©u m·∫°nh v√† duy nh·∫•t</li>" +
                        "<li>K√≠ch ho·∫°t x√°c th·ª±c 2 y·∫øu t·ªë n·∫øu c√≥ th·ªÉ</li>" +
                        "</ul>" +
                        "</div>" +
                        "<div class=\"footer\">" +
                        "<p>¬© 2024 Live Hungbao. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>" +
                        "<p>C·∫ßn h·ªó tr·ª£? Li√™n h·ªá: support@livehungbao.com</p>" +
                        "</div>" +
                        "</div>" +
                        "</body>" +
                        "</html>",
                fullName, TimeUtil.nowVietNam().format(DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss"))
        );
    }

    public void sendWithdrawOTP(String email, String fullName, String otpCode, String amount) {
        String subject = "M√£ OTP x√°c th·ª±c r√∫t ti·ªÅn - Live Hungbao";
        String body = String.format(
                "<!DOCTYPE html>" +
                        "<html>" +
                        "<head>" +
                        "<meta charset=\"UTF-8\">" +
                        "<style>" +
                        "body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }" +
                        ".container { max-width: 600px; margin: 0 auto; padding: 20px; }" +
                        ".header { background: linear-gradient(135deg, #667eea 0%%, #764ba2 100%%); color: white; padding: 20px; text-align: center; }" +
                        ".content { background: #f9f9f9; padding: 30px; }" +
                        ".otp-box { background: white; border: 2px solid #667eea; padding: 20px; text-align: center; margin: 20px 0; }" +
                        ".otp-code { font-size: 32px; font-weight: bold; color: #667eea; letter-spacing: 5px; }" +
                        ".warning { background: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; margin: 20px 0; }" +
                        ".footer { text-align: center; color: #666; font-size: 12px; margin-top: 30px; }" +
                        "</style>" +
                        "</head>" +
                        "<body>" +
                        "<div class=\"container\">" +
                        "<div class=\"header\">" +
                        "<h1>üîê X√°c th·ª±c r√∫t ti·ªÅn</h1>" +
                        "</div>" +
                        "<div class=\"content\">" +
                        "<h2>Xin ch√†o %s,</h2>" +
                        "<p>B·∫°n ƒë√£ y√™u c·∫ßu r√∫t ti·ªÅn v·ªõi s·ªë ti·ªÅn <strong>%s VND</strong>.</p>" +
                        "<p>Vui l√≤ng s·ª≠ d·ª•ng m√£ OTP d∆∞·ªõi ƒë√¢y ƒë·ªÉ x√°c th·ª±c giao d·ªãch:</p>" +
                        "<div class=\"otp-box\">" +
                        "<div class=\"otp-code\">%s</div>" +
                        "<p><small>M√£ c√≥ hi·ªáu l·ª±c trong 5 ph√∫t</small></p>" +
                        "</div>" +
                        "<div class=\"warning\">" +
                        "<strong>‚ö†Ô∏è L∆∞u √Ω quan tr·ªçng:</strong>" +
                        "<ul>" +
                        "<li>Kh√¥ng chia s·∫ª m√£ OTP v·ªõi b·∫•t k·ª≥ ai</li>" +
                        "<li>M√£ OTP ch·ªâ c√≥ hi·ªáu l·ª±c trong 5 ph√∫t</li>" +
                        "<li>N·∫øu b·∫°n kh√¥ng th·ª±c hi·ªán giao d·ªãch n√†y, vui l√≤ng li√™n h·ªá h·ªó tr·ª£ ngay</li>" +
                        "</ul>" +
                        "</div>" +
                        "<p>Tr√¢n tr·ªçng,<br>ƒê·ªôi ng≈© Live Hungbao</p>" +
                        "<p><em>Th·ªùi gian: %s</em></p>" +
                        "</div>" +
                        "<div class=\"footer\">" +
                        "<p>¬© 2024 Live Hungbao. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>" +
                        "<p>C·∫ßn h·ªó tr·ª£? Li√™n h·ªá: support@livehungbao.com</p>" +
                        "</div>" +
                        "</div>" +
                        "</body>" +
                        "</html>",
                fullName, amount, otpCode, TimeUtil.nowVietNam().format(DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss"))
        );

        try {
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper messageHelper = new MimeMessageHelper(message, true, "UTF-8");
            messageHelper.setFrom(fromEmail, fromName);
            messageHelper.setTo(email);
            messageHelper.setSubject(subject);
            messageHelper.setText(body, true);
            mailSender.send(message);
            log.info("OTP withdrawal email sent successfully to {}", email);
        } catch (MessagingException | UnsupportedEncodingException e) {
            log.error("Error sending OTP withdrawal email to {}", email, e);
            throw new RuntimeException("Failed to send OTP email", e);
        }
    }
}
